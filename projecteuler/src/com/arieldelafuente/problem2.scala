package com.arieldelafuente

/*
 * Problem 2 http://projecteuler.net/problem=2
 * Each new term in the Fibonacci sequence is generated by adding the 
 * previous two terms. By starting with 1 and 2, the first 10 terms 
 * will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do 
 * not exceed four million, find the sum of the even-valued terms.
 */

object problem2 {

  def main(args: Array[String]): Unit = {
    println(nonrecursive(4000000))
    println(recursive1(4000000,1))
  }

  def fibo(n: Int): Int = if (n < 2) n else fibo(n - 1) + fibo(n - 2)
  
  def recursive1(n: Int, i: Int): Int = {
    val f = fibo(i)
    if (f <= n) (f * ((f % 2) - 1).abs) + recursive1(n, i+1)
    else 0
  }
  
  def nonrecursive(n: Int): Int = {
    var thesum = 0
    var i = 1
    var f = 0
    
    f = fibo(i)
    while (f <= n) {
      thesum += (if (f % 2 == 0) f else 0)
      i += 1
      f = fibo(i)
    } 
    return thesum
  }
}